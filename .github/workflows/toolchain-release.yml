name: toolchain-release
on:
  schedule:
    - cron: '23 18 * * *'
  push:
  pull_request:

jobs:
  toolchain:
    name: Build LLVM
    runs-on: ${{ matrix.os }}
    env:
      CC: /tmp/llvm/bin/clang
      CXX: /tmp/llvm/bin/clang++
      artifact-path: llvm-${{ matrix.target.triple }}.tar.xz
      LD_LIBRARY_PATH: "/tmp/llvm/lib:/tmp/llvm/lib/${{ matrix.toolchain }}:/usr/lib"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        target:
          - name: X86
            triple: x86_64-unknown-linux-gnu
            gcc-triple:
          - name: AArch64
            triple: aarch64-unknown-linux-gnu
            gcc-triple: -aarch64-linux-gnu
    steps:
      - name: Install tools
        id: install_tools
        run: |
          sudo wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
          sudo apt-add-repository 'deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy main'
          sudo apt-get update
          sudo apt-get autoremove -y
          sudo apt-get remove -y clang-* llvm-*
          sudo apt-get install -y                   \
            binutils${{ matrix.target.gcc-triple }} \
            bzip2                                   \
            cmake                                   \
            gcc-11${{ matrix.target.gcc-triple }}   \
            g++-11${{ matrix.target.gcc-triple }}   \
            libedit-dev                             \
            libz3-dev                               \
            clang                                   \
            clang-tools                             \
            libc++-17-dev                           \
            libc++abi-17-dev                        \
            lld                                     \
            llvm-dev                                \
            lua5.3                                  \
            ninja-build                             \
            swig4.0

      - name: Checkout lah-toolchain
        uses: actions/checkout@v3
        id: checkout
        with:
          repository: cjdb/lah-toolchain.git
          ref: main
          path: lah-toolchain

      - name: Checkout llvm-project
        uses: actions/checkout@v3
        id: checkout-llvm
        with:
          repository: llvm/llvm-project.git
          ref: main
          path: llvm-project

      - name: Apply patches
        working-directory: llvm-project
        run: |
          for i in `ls ../lah-toolchain/patches`; do
            echo "Applying $i"
            patch -p1 --verbose < "../lah-toolchain/patches/$i"
          done

      - name: Configure llvm-project
        id: configure
        run:
          cmake
            -G Ninja
            -S llvm-project/llvm
            -B build
            -DCMAKE_BUILD_TYPE=Release
            -DCMAKE_CROSSCOMPILING=Yes
            -DCMAKE_INSTALL_PREFIX=/tmp/llvm
            -DLLVM_DEFAULT_TARGET_TRIPLE=${{ matrix.target.triple }}
            -DLLVM_ENABLE_ASSERTIONS=Yes
            -DLLVM_ENABLE_LLD=Yes
            -DLLVM_ENABLE_LIBCXX=Yes
            -DLLVM_ENABLE_MODULES=Yes
            -DLLVM_ENABLE_PROJECTS='clang;clang-tools-extra;lld;polly'
            -DLLVM_ENABLE_RUNTIMES='compiler-rt;libcxx;libcxxabi;libunwind'
            -DLLVM_ENABLE_ZLIB=Yes
            -DLLVM_INSTALL_UTILS=Yes
            -DLLVM_OPTIMIZED_TABLEGEN=Yes
            -DLLVM_TARGETS_TO_BUILD=${{ matrix.target.name }}

      - name: Build and install llvm-project
        id: build
        run: |
          ninja -C build install
          ninja -C build install-LLVMFileCheck

      - name: Bundle llvm-project
        id: bundle
        working-directory: /tmp
        run: tar -cf ${{ env.artifact-path }} llvm -I "xz -9 -T0"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact-path }}
          path: /tmp/${{ env.artifact-path }}
